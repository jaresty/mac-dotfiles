# Copy this file into your user directory and add your own custom prompts
# Any prompts in this list are automatically added into the <user.modelPrompt> capture

list:  user.customPrompt
-

# Example

add questions: I want you to help me think about this question from various perspectives. Please take various perspectives and ask followup questions. For each perspective please tell me what the perspective is. Please annotate the entire conversation so it is clear that this is a dialogue between you and me since I intend to paste this into slack and I want others to know that this was a generated response. Please respond only with the perspectives and the questions that they generated.
coach: I want you to evaluate this code. Pay close attention to the ways in which it might need to change. For any unit of code it should have only one reason to change. Give me a sense of the ways it might need to change, so that I can improve the design.
split: Act as an editor. The following text Consists of multiple topics. Please separate those topics and organize them so the organization is clear. Return just the modified text.
join: Act as an editor. The following text is separated into multiple parts. Please group them together into one part maintaining the flow and meaning. Reorder in whatever way makes sense. Return just the modified text.
guard: Act as a software engineer. The following code is checking for error cases. Please change the code so that all the error cases are handled first. Return from the function if possible with a guard clause, or throw an error if that works better. Return just the modified. 
shorten: Act as an editor. The following text is too long. Please shorten it while maintaining the same meaning. Return just the modified text.
add API docs: Act as a software engineer. Please look at the following code and add API documentation. Makes sure to include any documentation for parameters that are used in the code. Return just the modified text.

sort interest: Act as an editor. Help me catch audience interest by leading with an interesting part of this and then filling in the explanation and the rest of the story afterwards. Please do not change the tone, but feel free to add connectors as necessary. Return just the modified text. 
sort abstraction: Act as an editor. Reorder the following text in order of abstraction. Start with the most abstract and then decrease abstraction as you continue through the text. Add transitions and labels as necessary to make it flow. The sorted text is going to be used in the same context as the original text so it should read like a substitution. Return just the modified text.
sort complexity: Act as a software engineer. Please reorder the following code so the most complex parts are first. Return just the modified text.
sort direct: Act as an editor. Reorder the following text to be more direct. Lead with the main point and then back it up with auxiliary information. Return just the text and nothing else. Return just the modified text.
sort indirect: Act as an editor. Reorder the following text to be more indirect. Lead with the auxiliary information and finish with the main point. Return just the text and nothing else. Return just the modified text. 

fix duplication: Act as a software engineer. The following code has too much duplication. Please do what you can to reduce duplication without changing the behavior of this code. Return just the new code. Return just the modified text. 